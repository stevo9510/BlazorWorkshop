@page "/"
@using BlazorWorkshop.Data;
Customers:
<TestComponent Customers="customers"
               SelectedCustomer="selectedCustomer"
               CustomerResetEvent="CustomerResetting"
               CustomerSelectEvent="CustomerSelected"
               UpdateCustomerEvent="UpdateCustomer"
               AddCustomerEvent="AddCustomer"
               DeleteCustomerEvent="DeleteCustomer"> </TestComponent>

@if (selectedCustomer != null)
{
    <br />
    <br />
    <span style="color:green;">Customer Selected: @selectedCustomer.Name</span>
}

@code {

    List<Customer> customers = new List<Customer>();

    Customer selectedCustomer;

    private void CustomerSelected(Customer customer)
    {
        selectedCustomer = customer;
    }

    protected override async Task OnInitializedAsync()
    {
        customers = await CustomerService.GetAllCustomersAsync();
    }

    protected async Task CustomerResetting(int customerId)
    {
        Customer originalCustomer = await CustomerService.GetCustomerAsync(customerId);
        if (originalCustomer != null)
        {
            customers[customers.FindIndex(x => x.CustomerId == customerId)] = originalCustomer;
            selectedCustomer = originalCustomer;
        }
    }

    protected async Task AddCustomer(Customer customer)
    {
        int nextId = customers.Count > 0 ? customers.Select(c => c.CustomerId).Max() + 1 : 1;
        customer.CustomerId = nextId;
        await CustomerService.AddCustomerAsync(customer);
        customers = await CustomerService.GetAllCustomersAsync();
    }

    protected async Task UpdateCustomer(Customer customer)
    {
        await CustomerService.UpdateCustomerAsync(customer);
        customers = await CustomerService.GetAllCustomersAsync();
    }

    protected async Task DeleteCustomer(int customerId)
    {
        await CustomerService.DeleteCustomerAsync(customerId);
        customers = await CustomerService.GetAllCustomersAsync();
    }

}